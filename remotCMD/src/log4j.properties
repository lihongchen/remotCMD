#####################################################

#说明：Log4j划分为OFF、FATAL、ERROR、WARN、INFO、DEBUG、ALL
#通过配置log4j.rootLogger的级别，您可以控制到应用程序中相应级别的日志信息的开关。
#还可以通过每个Threshold设置每个日志类型的级别
#以下是输出日志时格式参数说明
# %m 输出代码中指定的消息 
# %p 输出优先级，即DEBUG，INFO，WARN，ERROR，FATAL 
# %r 输出自应用启动到输出该log信息耗费的毫秒数 
# %c 输出所属的类目，通常就是所在类的全名 
# %t 输出产生该日志事件的线程名 
# %n 输出一个回车换行符，Windows平台为"rn"，Unix平台为"n" 
# %d 输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，比如：%d{yyy MMM dd HH:mm:ss,SSS}，输出类似：2002年10月18日 22：10：28，921 
# %l 输出日志事件的发生位置，包括类目名、发生的线程，以及在代码中的行数。举例：Testlog4.main(Test Log4.java:10) 
####################################################
#定义错误日志的级别和记录的方式
log4j.rootLogger = DEBUG,C,D,E

### 输出调试信息 ###
log4j.appender.DEBUG = org.apache.log4j.ConsoleAppender
log4j.appender.DEBUG.Target =logs//servernew_debug.log
log4j.appender.DEBUG.layout = org.apache.log4j.PatternLayout
#在控制台输出信息的级别 OFF关闭所有的信息输出
log4j.appender.DEBUG.Threshold=DEBUG
log4j.appender.DEBUG.layout.ConversionPattern =[%p]  %m%n







### 输出到控制台 ###
log4j.appender.C = org.apache.log4j.ConsoleAppender
log4j.appender.C.Target = System.out
log4j.appender.C.layout = org.apache.log4j.PatternLayout
#在控制台输出信息的级别 OFF关闭所有的信息输出
log4j.appender.C.Threshold=INFO
log4j.appender.C.layout.ConversionPattern =[%p]  %m%n

### 输出到日志文件(开发人员日志)###
log4j.appender.D = org.apache.log4j.DailyRollingFileAppender
log4j.appender.D.File=logs//servernew_error.log
log4j.appender.D.DatePattern=.yyyy-MM-dd
log4j.appender.D.Append=true
#输出ERROR级别以上的日志
log4j.appender.D.Threshold=ERROR
log4j.appender.D.layout=org.apache.log4j.PatternLayout
log4j.appender.D.layout.ConversionPattern =[%p]%d{yyyy-MM-dd HH:mm:ss,SSS} %l %m%n


### 输出到日志文件(用户日志)###
log4j.appender.E = org.apache.log4j.DailyRollingFileAppender
log4j.appender.E.File=logs//servernew_info.log
log4j.appender.E.DatePattern=.yyyy-MM-dd
log4j.appender.E.Append=true
#输出ERROR级别以上的日志
log4j.appender.E.Threshold=FATAL
log4j.appender.E.layout=org.apache.log4j.PatternLayout
log4j.appender.E.layout.ConversionPattern =%d{yyyy-MM-dd HH:mm:ss,SSS} %l  %m%n
##################用户需要的自定义配置####################
#是否开启日志删除
user.log.del=true 
#时间单位 d天 h小时 m分钟 s秒 
user.time.unit=m
#保存时间
user.time.save=3
 
